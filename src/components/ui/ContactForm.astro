---
import { actions } from "astro:actions";
import Button from "./button.astro";
import Modal from "./Modal.astro";
---

<div>
  <form
    action={actions.getContact}
    class="space-y-10 contact-form"
    method="POST"
  >
    <div class="relative">
      <input
        type="text"
        placeholder="Nombre"
        id="fullName"
        name="fullName"
        required
        aria-describedby="fullName-error"
        class="peer font-playfair h-15 w-full border-b-2 border-smokyBlack/30 text-smokyBlack bg-transparent placeholder-transparent focus:outline-none focus:border-salviaGreen"
      />
      <p id="error_fullName" class="text-red-600 text-sm font-openSans"></p>

      <label
        for="fullName"
        class="absolute font-playfair left-0 -top-3.5 text-smokyBlack text-xl transition-all peer-placeholder-shown:font-semibold peer-placeholder-shown:text-smokyBlack peer-placeholder-shown:top-2 peer-focus:-top-5.5 peer-focus:text-smokyBlack/50 peer-focus:text-base"
      >
        Nombre
      </label>
    </div>

    <div class="relative">
      <input
        transition:persist
        type="email"
        placeholder="email@ejemplo.com"
        id="email"
        name="email"
        required
        aria-describedby="email-error"
        class="peer font-playfair h-15 w-full border-b-2 border-smokyBlack/30 text-smokyBlack bg-transparent placeholder-transparent focus:outline-none focus:border-salviaGreen"
      />
      <p id="error_email" class="text-red-500 text-sm font-openSans"></p>

      <label
        for="email"
        class="absolute font-playfair left-0 -top-3.5 text-smokyBlack text-xl transition-all peer-placeholder-shown:font-semibold peer-placeholder-shown:text-smokyBlack peer-placeholder-shown:top-2 peer-focus:-top-5.5 peer-focus:text-smokyBlack/50 peer-focus:text-base"
      >
        E-mail
      </label>
    </div>

    <div class="relative">
      <input
        transition:persist
        type="tel"
        placeholder="+57 xxx-xxx-xxxx"
        id="telefono"
        name="telefono"
        required
        aria-describedby="telefono-error"
        class="peer font-playfair h-15 w-full border-b-2 border-smokyBlack/30 text-smokyBlack bg-transparent placeholder-transparent focus:outline-none focus:border-salviaGreen"
      />

      <label
        for="telefono"
        class="absolute font-playfair left-0 -top-3.5 text-smokyBlack text-xl transition-all peer-placeholder-shown:font-semibold peer-placeholder-shown:text-smokyBlack peer-placeholder-shown:top-2 peer-focus:-top-5.5 peer-focus:text-smokyBlack/50 peer-focus:text-base"
      >
        Telefono
      </label>
    </div>

    <div class="relative">
      <textarea
        transition:persist
        cols="30"
        rows="5"
        placeholder="Mensaje"
        id="inquietudes"
        name="inquietudes"
        required
        aria-describedby="inquietudes-error"
        class="peer field-sizing-content font-playfair h-15 w-full border-b-2 border-smokyBlack/30 text-smokyBlack bg-transparent placeholder-transparent focus:outline-none focus:border-salviaGreen"
      ></textarea>
      <p id="error_inquietudes" class="text-red-500 text-sm font-openSans"></p>
      <label
        for="inquietudes"
        class="absolute font-playfair left-0 -top-3.5 text-smokyBlack text-xl transition-all peer-placeholder-shown:font-semibold peer-placeholder-shown:text-smokyBlack peer-placeholder-shown:top-2 peer-focus:-top-5.5 peer-focus:text-smokyBlack/50 peer-focus:text-base"
      >
        Mensaje
      </label>
    </div>

    <div class="relative">
      <label for="terms">
        <input
          type="checkbox"
          id="terms"
          name="terms"
          value="true"
          aria-describedby="terms-error"
          class="accent-salviaGreen rounded-md h-4 w-4"
        />
        Aceptar terminos y condiciones
      </label>
      <p id="error_terms" class="text-red-500 text-sm font-openSans"></p>
    </div>

    <div class="flex justify-center">
      <Button type="submit" variant="primary" className="btn-submit"
        >Enviar</Button
      >
    </div>
  </form>

  <!-- Success Modal -->
  <Modal id="success-modal" />
</div>

<script>
  import { actions } from "astro:actions";
  import { isInputError } from "astro:actions";
  import { gsap } from "gsap";

  const form = document.querySelector(".contact-form") as HTMLFormElement;
  const btnSubmit = document.querySelector(".btn-submit") as HTMLButtonElement;
  const modal = document.getElementById("success-modal") as HTMLElement;
  const modalContent = modal?.querySelector(".modal-content") as HTMLElement;
  const modalIcon = modal?.querySelector(".modal-icon") as HTMLElement;

  let isModalOpen = false;
  let previousFocusedElement: HTMLElement | null = null;
  let autoCloseTimer: number | null = null;

  // Modal Functions
  function openModal() {
    if (!modal || isModalOpen) return;

    isModalOpen = true;
    previousFocusedElement = document.activeElement as HTMLElement;

    // Prevent body scroll
    document.body.style.overflow = "hidden";

    // Set initial state
    gsap.set(modal, { display: "flex", opacity: 0 });
    gsap.set(modalContent, { scale: 0.8, y: 30 });
    gsap.set(modalIcon, { scale: 0, rotation: -180 });

    // Animate modal entrance
    const timeline = gsap.timeline();

    timeline
      .to(modal, {
        opacity: 1,
        duration: 0.3,
        ease: "power2.out",
      })
      .to(
        modalContent,
        {
          scale: 1,
          y: 0,
          duration: 0.5,
          ease: "back.out(1.7)",
        },
        "-=0.2"
      )
      .to(
        modalIcon,
        {
          scale: 1,
          rotation: 0,
          duration: 0.6,
          ease: "elastic.out(1, 0.5)",
        },
        "-=0.3"
      );

    // Auto-close after 5 seconds
    autoCloseTimer = window.setTimeout(() => {
      closeModal();
    }, 5000);
  }

  function closeModal() {
    if (!modal || !isModalOpen) return;

    // Clear auto-close timer if it exists
    if (autoCloseTimer) {
      clearTimeout(autoCloseTimer);
      autoCloseTimer = null;
    }

    const timeline = gsap.timeline({
      onComplete: () => {
        isModalOpen = false;
        document.body.style.overflow = "";
        gsap.set(modal, { display: "none" });

        // Return focus to previously focused element
        if (previousFocusedElement) {
          previousFocusedElement.focus();
        }
      },
    });

    timeline
      .to(modalIcon, {
        scale: 0,
        rotation: 180,
        duration: 0.3,
        ease: "power2.in",
      })
      .to(
        modalContent,
        {
          scale: 0.8,
          y: 30,
          duration: 0.3,
          ease: "power2.in",
        },
        "-=0.2"
      )
      .to(
        modal,
        {
          opacity: 0,
          duration: 0.2,
          ease: "power2.in",
        },
        "-=0.1"
      );
  }

  // Modal Event Listeners
  // Close on overlay click (click outside)
  modal?.addEventListener("click", (e) => {
    if (e.target === modal) {
      closeModal();
    }
  });

  // Close on Escape key
  document.addEventListener("keydown", (e) => {
    if (e.key === "Escape" && isModalOpen) {
      closeModal();
    }
  });


  // Form Submission
  form.addEventListener("submit", async (e) => {
    e.preventDefault();

    // Clear all error messages first
    const errorElements = document.querySelectorAll('[id^="error_"]');
    errorElements.forEach((el) => {
      if (el instanceof HTMLElement) {
        el.textContent = "";
      }
    });

    const formData = new FormData(form);

    btnSubmit.setAttribute("disabled", "disabled");

    const { error } = await actions.getContact(formData);

    try {
      if (error && isInputError(error)) {
        console.log(error.fields);
        Object.entries(error.fields).forEach(([label, messages]) => {
          (
            document.querySelector(`#error_${label}`) as HTMLParagraphElement
          ).textContent = messages[0];
        });
        btnSubmit.removeAttribute("disabled");
        btnSubmit.textContent = "Enviar";
      } else {
        // Success! Clear the form and show success modal
        form.reset();

        // Dispatch custom event for rocket launch
        document.dispatchEvent(new CustomEvent("formSuccess"));

        // Open success modal
        openModal();
      }
    } catch (error) {
      console.error(error);
    } finally {
      btnSubmit.removeAttribute("disabled");
      btnSubmit.textContent = "Enviar";
    }
  });
</script>
